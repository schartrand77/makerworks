# syntax=docker/dockerfile:1.5

###################################
# Builder stage
###################################
FROM python:3.12-slim AS builder

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=on

WORKDIR /app

# System dependencies
RUN apt-get update \
 && apt-get install -y --no-install-recommends \
      build-essential \
      libpq-dev \
      curl \
 && rm -rf /var/lib/apt/lists/*

# Install Python dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copy application code
COPY app ./app

# Copy entire Alembic directory (env.py, script.py.mako, README, versions/, etc.)
COPY alembic ./alembic
COPY alembic.ini ./

# Ensure alembic/versions directory exists even if empty
RUN test -d alembic/versions || mkdir -p alembic/versions

###################################
# Final image stage
###################################
FROM python:3.12-slim

ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

WORKDIR /app

# Install Postgres client so psql/pg_isready exist in the final image
RUN apt-get update \
 && apt-get install -y --no-install-recommends postgresql-client \
 && rm -rf /var/lib/apt/lists/*

# Copy installed packages from builder
COPY --from=builder /usr/local /usr/local

# Copy app code
COPY --from=builder /app/app ./app

# Copy full Alembic tree from builder
COPY --from=builder /app/alembic ./alembic
COPY --from=builder /app/alembic.ini ./

# Copy and make your entrypoint executable
COPY docker-entrypoint.sh .
RUN chmod +x docker-entrypoint.sh

EXPOSE 8000
ENTRYPOINT ["./docker-entrypoint.sh"]
