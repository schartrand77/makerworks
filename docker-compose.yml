services:
  postgres:
    image: postgres:15-alpine
    container_name: makerworks_postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: makerworks
      POSTGRES_PASSWORD: makerworks
      POSTGRES_DB: makerworks
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U makerworks"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: makerworks_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: >
      redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile
    container_name: makerworks_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - makerworks-backend/.env
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
      BASE_URL: http://localhost:8000
    volumes:
      - ./makerworks-backend/uploads:/app/uploads
      - ./makerworks-backend/logs:/app/logs
      - ./makerworks-backend/alembic:/app/alembic
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/api/v1/system/status || exit 1"]
      interval: 15s
      timeout: 10s
      start_period: 40s
      retries: 5

  worker:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile
    container_name: makerworks_worker
    restart: unless-stopped
    command: celery -A app.celery_worker.celery_app worker --loglevel=INFO --concurrency=2
    env_file:
      - makerworks-backend/.env
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
    volumes:
      - ./makerworks-backend/uploads:/app/uploads
      - ./makerworks-backend/alembic:/app/alembic
    depends_on:
      backend:
        condition: service_healthy
      redis:
        condition: service_healthy

  frontend:
    build:
      context: ./makerworks-frontend
      dockerfile: Dockerfile
    container_name: makerworks_frontend
    restart: unless-stopped
    ports:
      - "5173:5173"
    env_file:
      - makerworks-frontend/.env
    volumes:
      - ./makerworks-frontend:/app
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: