# syntax=docker/dockerfile:1.5

##############################################
# ===== Base Stage for macOS ARM64 =====
##############################################
FROM --platform=linux/arm64/v8 python:3.12-slim as base

WORKDIR /app

# Install runtime & psycopg2 deps
RUN apt-get update && apt-get install -y \
    build-essential \
    libpq-dev \
    libpq5 \
    gcc \
    curl \
    libfreetype6-dev \
    libpng-dev \
    pkg-config \
    python3-dev \
    git \
    postgresql-client \
 && rm -rf /var/lib/apt/lists/*

# Install Python deps
COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip \
 && pip install --no-cache-dir psycopg2-binary>=2.9 \
 && pip install --no-cache-dir -r requirements.txt \
 && pip install --no-cache-dir gunicorn uvicorn

##############################################
# ===== Builder Stage =====
##############################################
FROM base as builder
WORKDIR /app

COPY alembic.ini /app/alembic.ini
COPY alembic /app/alembic
COPY .env.dev /app/.env.dev

RUN test -f /app/.env.dev || touch /app/.env.dev

##############################################
# ===== Final Stage =====
##############################################
FROM base as final
WORKDIR /app

COPY --from=builder /usr/local /usr/local
COPY --from=builder /app/alembic /app/alembic
COPY --from=builder /app/alembic.ini /app/alembic.ini
COPY --from=builder /app/.env.dev /app/.env.dev

COPY ./app /app/app
COPY ./docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

EXPOSE 8000
CMD ["./docker-entrypoint.sh"]