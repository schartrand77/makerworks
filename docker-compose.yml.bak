x-buildkit-env: &buildkit-env
  COMPOSE_BAKE: "true"
  DOCKER_BUILDKIT: "1"
  BUILDKIT_INLINE_CACHE: "1"

services:
  postgres:
    image: postgres:15-alpine
    container_name: makerworks_postgres
    restart: unless-stopped
    ports: ["5432:5432"]
    environment:
      POSTGRES_USER: makerworks
      POSTGRES_PASSWORD: makerworks
      POSTGRES_DB: makerworks
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U makerworks"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: makerworks_redis
    restart: unless-stopped
    ports: ["6379:6379"]
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  migrate:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile.macos
    container_name: makerworks_migrate
    restart: "no"
    entrypoint: ["/bin/sh", "-c"]
    command: |
      echo "‚è≥ Waiting for PostgreSQL..."
      until PGPASSWORD=makerworks psql -h postgres -U makerworks -d makerworks -c '\q'; do
        sleep 1
      done
      echo "üîñ Stamping initial stub..."
      alembic -c alembic.ini stamp ecf884acd250
      echo "üöÄ Applying migrations..."
      alembic -c alembic.ini upgrade head
    working_dir: /app
    volumes:
      - ./makerworks-backend:/app
    environment:
      <<: *buildkit-env
      DATABASE_URL: "postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks"
      REDIS_URL: "redis://redis:6379/0"
      RUN_MIGRATIONS: "true"
    depends_on:
      postgres:
        condition: service_healthy

  backend:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile.macos
    container_name: makerworks_backend
    restart: unless-stopped
    ports: ["8000:8000"]
    volumes:
      - ./makerworks-backend:/app
      # map host folders so API & previews write where you can see them
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/uploads:/app/uploads
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/thumbnails:/thumbnails
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/models:/models
    env_file:
      - ./makerworks-backend/.env.dev
      - ./makerworks-backend/.env
    environment:
      <<: *buildkit-env
      DATABASE_URL: "postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks"
      REDIS_URL: "redis://redis:6379/0"         # keep if backend uses Redis (sessions/cache)
      BASE_URL: "http://localhost:8000"
      # CORS for local dev
      CORS_ORIGINS: '["http://localhost:5173","http://127.0.0.1:5173","http://localhost:8080","http://localhost:3000"]'
      # explicit paths that match the mounts above
      UPLOAD_DIR: "/app/uploads"
      THUMBNAILS_DIR: "/thumbnails"
      THUMBNAILS_URL_PREFIX: "/thumbnails"
      MODELS_DIR: "/models"
      # sane thumbnail defaults (match your renderer)
      THUMBNAIL_BACKEND: "plotly"
      THUMBNAIL_SIZE: "1024"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fs http://localhost:8000/api/v1/system/status || exit 1"]
      interval: 15s
      timeout: 10s
      start_period: 90s
      retries: 5

  # Dev frontend (Vite on 5173)
  frontend:
    build:
      context: ./makerworks-frontend
      dockerfile: Dockerfile
      target: dev
    container_name: makerworks_frontend
    restart: unless-stopped
    ports: ["5173:5173"]
    environment:
      <<: *buildkit-env
      VITE_API_BASE_URL: "http://localhost:8000/api/v1"
      VITE_BACKEND_URL:  "http://localhost:8000"
    volumes:
      - ./makerworks-frontend:/app
      - /app/node_modules
    depends_on:
      backend:
        condition: service_healthy
    command: npm run dev -- --host

  # Prod frontend (Nginx serves /dist) ‚Äî moved off 5173 to avoid conflict
  frontend-prod:
    build:
      context: ./makerworks-frontend
      dockerfile: Dockerfile
      target: production
    container_name: makerworks_frontend_prod
    restart: unless-stopped
    ports: ["5174:80"]
    volumes:
      - ./makerworks-frontend/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data: