  backend:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile.macos
    container_name: makerworks_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    entrypoint: ["/bin/sh", "-c"]
    command: |
      set -e
      mkdir -p /uploads /thumbnails /models
      if [ -f .env.dev ]; then set -a; . ./.env.dev; set +a; fi
      until pg_isready -h postgres -U makerworks >/dev/null 2>&1; do sleep 1; done
      exec gunicorn -k uvicorn.workers.UvicornWorker app.main:app --bind 0.0.0.0:8000
    working_dir: /app
    volumes:
      - ./makerworks-backend:/app
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/uploads:/uploads
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/thumbnails:/thumbnails
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/models:/models
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
      UPLOAD_DIR: /uploads
      THUMBNAILS_DIR: /thumbnails
      MODELS_DIR: /models
      CORS_ORIGINS: "http://localhost:5173,http://127.0.0.1:5173"
    depends_on:
      postgres:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "python -c \"import socket,sys; s=socket.socket(); s.settimeout(2); s.connect(('127.0.0.1',8000)); s.close(); sys.exit(0)\""]
      interval: 10s
      timeout: 3s
      retries: 24
      start_period: 90s

  worker:
    build:
      context: ./makerworks-backend
      dockerfile: Dockerfile.macos
      args: { WORKER_IMAGE: "true" }
    container_name: makerworks_worker
    restart: unless-stopped
    entrypoint: ["/bin/sh", "-c"]
    command: |
      set -e
      mkdir -p /uploads /thumbnails /models
      if [ -f .env.dev ]; then set -a; . ./.env.dev; set +a; fi
      until pg_isready -h postgres -U makerworks >/dev/null 2>&1; do sleep 1; done
      sleep 2
      exec celery -A app.worker.celery_app worker --loglevel=INFO --concurrency=2
    working_dir: /app
    volumes:
      - ./makerworks-backend:/app
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/uploads:/uploads
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/thumbnails:/thumbnails
      - /Users/stephenchartrand/Downloads/makerworks-repo/makerworks/models:/models
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
      UPLOAD_DIR: /uploads
      THUMBNAILS_DIR: /thumbnails
      MODELS_DIR: /models
      C_FORCE_ROOT: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully

  frontend:
    build:
      context: ./makerworks-frontend
      dockerfile: Dockerfile
      target: dev
    container_name: makerworks_frontend
    restart: unless-stopped
    ports: ["5173:5173"]
    environment:
      VITE_API_BASE_URL: http://localhost:8000/api/v1
    depends_on:
      backend:
        condition: service_healthy

  frontend-prod:
    build:
      context: ./makerworks-frontend
      dockerfile: Dockerfile
      target: production
    container_name: makerworks_frontend_prod
    restart: unless-stopped
    ports: ["8080:80"]
    depends_on:
      backend:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
