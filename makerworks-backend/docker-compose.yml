services:
  postgres:
    image: postgres:15-alpine
    container_name: makerworks_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: makerworks
      POSTGRES_PASSWORD: makerworks
      POSTGRES_DB: makerworks
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U makerworks"]
      interval: 5s
      timeout: 3s
      retries: 10

  redis:
    image: redis:7-alpine
    container_name: makerworks_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 10

  backend:
    build:
      context: .
      dockerfile: Dockerfile.macos
    container_name: makerworks_backend
    restart: unless-stopped
    command:
      - gunicorn
      - -k
      - uvicorn.workers.UvicornWorker
      - app.main:app
      - --bind
      - 0.0.0.0:8000
    ports:
      - "8000:8000"
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  migrate:
    build:
      context: .
      dockerfile: Dockerfile.macos
    container_name: makerworks_migrate
    entrypoint: [ "/bin/sh", "-c" ]
    command: >
      echo '‚è≥ Waiting for PostgreSQL...';
      until pg_isready -h postgres -p 5432 -U makerworks; do
        echo '... still waiting for db';
        sleep 1;
      done;
      echo '‚úÖ PostgreSQL is ready.';
      echo 'üîñ Stamping initial revision...';
      alembic stamp ecf884acd250;
      echo 'üöÄ Applying migrations...';
      alembic upgrade head;
      echo 'üë§ Seeding admin user...';
      python -m app.utils.admin_seed || echo '‚ö†Ô∏è Admin seed failed';
      echo '‚úÖ Migration complete.';
    volumes:
      - ./:/app
      - ./alembic/versions:/app/alembic/versions
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
    working_dir: /app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy

  worker:
    build:
      context: .
      dockerfile: Dockerfile.macos
      args:
        WORKER_IMAGE: "true"
    container_name: makerworks_worker
    command:
      - celery
      - -A
      - app.worker.celery_app
      - worker
      - --loglevel=info
    volumes:
      - ./:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://makerworks:makerworks@postgres:5432/makerworks
      REDIS_URL: redis://redis:6379/0
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy

volumes:
  postgres_data:
  redis_data:
