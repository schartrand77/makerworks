# syntax=docker/dockerfile:1.5

##############################################
# ===== macOS Backend (multi-arch) =====
##############################################

ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} python:3.12-slim AS base

WORKDIR /app

# Install Postgres client with fallback and required build tools
RUN apt-get update && \
    (apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        libpq5 \
        gcc \
        musl-dev \
        curl \
        git \
        libfreetype6-dev \
        libpng-dev \
        pkg-config \
        python3-dev \
        postgresql-client-15 \
     || apt-get install -y --no-install-recommends postgresql-client) && \
    rm -rf /var/lib/apt/lists/*

# Verify pg_isready exists
RUN command -v pg_isready || (echo "❌ pg_isready missing!" && exit 1)

# Python runtime niceties
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1

# Install Python deps
COPY makerworks-backend/requirements.txt ./requirements.txt
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip \
    && pip install --no-cache-dir psycopg2-binary>=2.9 \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir gunicorn uvicorn

##############################################
# ===== Builder Stage =====
##############################################
ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} base AS builder
WORKDIR /app

# Copy Alembic config and scripts
COPY makerworks-backend/alembic.ini /app/alembic.ini
COPY makerworks-backend/alembic /app/alembic

# Ensure alembic/versions directory exists even if empty
RUN test -d /app/alembic/versions || mkdir -p /app/alembic/versions

# Copy env example for local dev
COPY makerworks-backend/.env.example /app/.env.dev

##############################################
# ===== Final Stage =====
##############################################
ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} base AS final
WORKDIR /app

ARG CACHE_BUST=1

# Copy installed packages and Alembic from builder
COPY --from=builder /usr/local /usr/local
COPY --from=builder /app/alembic /app/alembic
COPY --from=builder /app/alembic.ini /app/alembic.ini
COPY --from=builder /app/.env.dev /app/.env.dev

# Copy backend application code and entrypoint
COPY makerworks-backend/app /app/app
COPY makerworks-backend/docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

# Ensure entrypoint has LF line endings (avoids CRLF issues)
RUN sed -i 's/\r$//' /app/docker-entrypoint.sh

EXPOSE 8000
ENTRYPOINT ["./docker-entrypoint.sh"]