# syntax=docker/dockerfile:1.5

##############################################
# ===== macOS ARM64 Backend =====
##############################################

ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} python:3.12-slim AS base

WORKDIR /app

# ✅ Install Postgres client with fallback to ensure pg_isready exists
RUN apt-get update && \
    (apt-get install -y --no-install-recommends \
        build-essential \
        libpq-dev \
        libpq5 \
        gcc \
        musl-dev \
        curl \
        git \
        libfreetype6-dev \
        libpng-dev \
        pkg-config \
        python3-dev \
        postgresql-client-15 \
     || apt-get install -y --no-install-recommends postgresql-client) && \
    rm -rf /var/lib/apt/lists/*

# ✅ Verify pg_isready exists to catch errors at build time
RUN command -v pg_isready || (echo "❌ pg_isready missing!" && exit 1)

COPY requirements.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip \
    && pip install --no-cache-dir psycopg2-binary>=2.9 \
    && pip install --no-cache-dir -r requirements.txt \
    && pip install --no-cache-dir gunicorn uvicorn

##############################################
# ===== Builder Stage =====
##############################################
ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} base AS builder
WORKDIR /app

COPY alembic.ini /app/alembic.ini
COPY alembic /app/alembic
COPY .env.dev /app/.env.dev
RUN test -f /app/.env.dev || touch /app/.env.dev

##############################################
# ===== Final Stage =====
##############################################
ARG TARGETPLATFORM
FROM --platform=${TARGETPLATFORM:-linux/arm64} base AS final
WORKDIR /app

ARG CACHE_BUST=1

COPY --from=builder /usr/local /usr/local
COPY --from=builder /app/alembic /app/alembic
COPY --from=builder /app/alembic.ini /app/alembic.ini
COPY --from=builder /app/.env.dev /app/.env.dev

COPY ./app /app/app
COPY ./docker-entrypoint.sh /app/docker-entrypoint.sh
RUN chmod +x /app/docker-entrypoint.sh

EXPOSE 8000
CMD ["./docker-entrypoint.sh"]
